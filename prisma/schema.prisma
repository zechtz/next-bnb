// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  name           String?       @db.VarChar(255)
  email          String?       @unique
  image          String?       @db.VarChar(255)
  hashedPassword String?       @map("hashed_password") @db.VarChar(255)
  emailVerified  DateTime?     @map("email_verified")
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")
  favoriteIds    Int[]         @map("favorite_ids") @db.Integer
  accounts       Account[]
  listings       Listing[]
  reservations   Revervation[]
  sessions       Session[]

  @@map("users")
}

model Account {
  id                Int     @id @default(autoincrement())
  type              String  @db.VarChar(255)
  provider          String  @db.VarChar(255)
  providerAccountId String  @map("provider_account_id") @db.VarChar(255)
  user              User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            Int?    @map("user_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  @@unique([provider, providerAccountId], map: "provider_provider_account_id_unique")
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique @map("session_token")
  expires      DateTime
  user         User?    @relation(fields: [userId], references: [id])
  userId       Int?     @map("user_id")

  @@map("sessions")
}

model Listing {
  id            Int           @id @default(autoincrement())
  title         String        @db.VarChar(255)
  description   String        @db.VarChar(255)
  category      String        @db.VarChar(255)
  imageSrc      String        @map("image_src") @db.VarChar(255)
  roomCount     Int           @map("room_count")
  bathroomCount Int           @map("bathroom_count")
  guestCount    Int           @map("guest_count")
  locationValue String        @map("location_value") @db.VarChar(255)
  price         Int
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  user          User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int?          @map("user_id")
  reservations  Revervation[]

  @@map("listings")
}

model Revervation {
  id          Int      @id @default(autoincrement())
  description String   @db.VarChar(255)
  totalPrice  Int      @map("total_price")
  startDate   DateTime @map("start_date")
  endDate     DateTime @map("end_date")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  user        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int?     @map("user_id")
  Listing     Listing? @relation(fields: [listingId], references: [id], onDelete: Cascade)
  listingId   Int?     @map("listing_id")

  @@map("reservations")
}
